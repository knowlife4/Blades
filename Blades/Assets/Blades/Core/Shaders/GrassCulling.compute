// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct GrassBlade
{
    float3 Position;
    float Rotation;
    float Height;
    float3 Color;
};

StructuredBuffer<GrassBlade> _bladeBuffer;
AppendStructuredBuffer<GrassBlade> _bladeBufferPass;

float4x4 _frustum;
float _distance;
float3 _cameraPosition;

[numthreads(128,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint identifier = id.x;
    if(identifier > _bladeBuffer.Length) return;

    for(uint i = 0; i < _bladeBuffer.Length; i++)
    {
        GrassBlade blade = _bladeBuffer[i];
        //if(distance(_cameraPosition, blade.Position) < _distance) _bladeBufferPass.Append(blade);
    }
}